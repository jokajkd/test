-- Username Hiding System
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local fakeName = "GameChanger"

-- Function to hide username in GUIs
local function hideUsernameInGUIs()
    local playerGui = LocalPlayer:WaitForChild("PlayerGui")
    
    local function updateTextElements(parent)
        for _, gui in pairs(parent:GetDescendants()) do
            if gui:IsA("TextLabel") or gui:IsA("TextButton") or gui:IsA("TextBox") then
                local text = gui.Text
                if text and type(text) == "string" and text:find(LocalPlayer.Name) then
                    gui.Text = text:gsub(LocalPlayer.Name, fakeName)
                end
            end
        end
    end
    
    updateTextElements(playerGui)
    
    playerGui.DescendantAdded:Connect(function(descendant)
        if descendant:IsA("TextLabel") or descendant:IsA("TextButton") or descendant:IsA("TextBox") then
            wait()
            local text = descendant.Text
            if text and type(text) == "string" and text:find(LocalPlayer.Name) then
                descendant.Text = text:gsub(LocalPlayer.Name, fakeName)
            end
        end
    end)
end

-- Function to override player name property
local function overridePlayerName()
    local mt = getrawmetatable(LocalPlayer)
    if mt then
        local oldIndex = mt.__index
        setreadonly(mt, false)
        mt.__index = function(t, k)
            if tostring(k) == "Name" or tostring(k) == "DisplayName" then
                return fakeName
            end
            return oldIndex(t, k)
        end
        setreadonly(mt, true)
    end
end

-- Function to hide username above character (nametag)
local function hideNametag()
    LocalPlayer.CharacterAdded:Connect(function(character)
        local humanoid = character:WaitForChild("Humanoid")
        humanoid:GetPropertyChangedSignal("DisplayName"):Connect(function()
            if humanoid.DisplayName == LocalPlayer.Name then
                humanoid.DisplayName = fakeName
            end
        end)
        if humanoid.DisplayName == LocalPlayer.Name then
            humanoid.DisplayName = fakeName
        end
    end)
    
    if LocalPlayer.Character then
        local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
        if humanoid and humanoid.DisplayName == LocalPlayer.Name then
            humanoid.DisplayName = fakeName
        end
    end
end

-- Initialize username hiding
print("üïµÔ∏è Initializing username hiding...")
pcall(hideUsernameInGUIs)
pcall(overridePlayerName)
pcall(hideNametag)
print("‚úÖ Username hidden! Showing as: " .. fakeName)

-- Check game place ID and run specific scripts
local placeId = game.PlaceId
print("üìç Current Place ID:", placeId)

if placeId == 80561320113856 then
    print("üéØ Running Sewers Zombie Attack Script...")
    
    -- Delete specified objects
    local success1, error1 = pcall(function()
        game:GetService("ReplicatedStorage").game_remotez.call_CONDITIONCHANGES:Destroy()
    end)

    local success2, error2 = pcall(function()
        game:GetService("ReplicatedStorage").ErrorReporter:Destroy()
    end)

    -- Print deletion results
    if success1 then
        print("Successfully deleted: game:GetService(\"ReplicatedStorage\").game_remotez.call_CONDITIONCHANGES")
    else
        print("Error deleting call_CONDITIONCHANGES:", error1)
    end

    if success2 then
        print("Successfully deleted: game:GetService(\"ReplicatedStorage\").ErrorReporter")
    else
        print("Error deleting ErrorReporter:", error2)
    end

    -- Run the firing script for Sewers map
    local args = {
        "Gun",
        game:GetService("Players").LocalPlayer.Character:WaitForChild("Dual Zeus"),
        workspace:WaitForChild("CURRENT_MAP"):WaitForChild("Sewers"):WaitForChild("Zombie"):WaitForChild("Head"),
        {
            {
                ChargeLevel = 0,
                ClientHitSize = Vector3.new(3.1703529357910156, 3.889321804046631, 3.8566854000091553),
                Distance = 36.665489196777344,
                ModuleName = "1",
                BulletId = "21,21|Bullet_{E6C22CEB-4569!2 C 3 F - A 3 D 0 - 8 E 5 B 0 6!.!, 9 E }"
            },
            {
                ChargeLevel = false,
                ClientHitSize = false,
                Distance = false,
                ModuleName = false,
                BulletId = true
            }
        }
    }

    local isFiring = true
    local firingRate = 0.0000000000000000000000000000000000000001
    local shotsPerBurst = 100

    -- Function to check if zombie is dead or game is finished
    local function checkGameStatus()
        local currentMap = workspace:WaitForChild("CURRENT_MAP")
        local sewers = currentMap:WaitForChild("Sewers")
        local zombie = sewers:WaitForChild("Zombie")
        
        -- Check if zombie exists and has health
        if zombie:FindFirstChild("Humanoid") then
            local humanoid = zombie.Humanoid
            if humanoid.Health <= 0 then
                print("üéØ Zombie defeated! Teleporting to lobby...")
                return true
            end
        end
        
        -- Check if head exists (zombie might be dead if head is missing)
        if not zombie:FindFirstChild("Head") then
            print("üéØ Zombie head missing! Teleporting to lobby...")
            return true
        end
        
        -- Check for game completion signals
        local gameFinished = workspace:FindFirstChild("GameFinished") or 
                            workspace:FindFirstChild("LevelComplete") or
                            workspace:FindFirstChild("MissionComplete")
        
        if gameFinished then
            print("üéØ Game completed! Teleporting to lobby...")
            return true
        end
        
        return false
    end

    -- Function to teleport to the lobby
    local function teleportToLobby()
        local TeleportService = game:GetService("TeleportService")
        local targetPlaceId = 15899178400
        
        print("üöÄ Teleporting to lobby (place ID: " .. targetPlaceId .. ")")
        
        local success, errorMsg = pcall(function()
            TeleportService:Teleport(targetPlaceId)
        end)
        
        if not success then
            warn("‚ùå Teleport failed:", errorMsg)
            print("‚ö†Ô∏è  Please join place ID 15899178400 manually")
        end
    end

    -- Monitor game status
    local function startGameMonitor()
        while true do
            if checkGameStatus() then
                teleportToLobby()
                break
            end
            wait(1)
        end
    end

    local function startFiring()
        while isFiring do
            for i = 1, shotsPerBurst do
                game:GetService("ReplicatedStorage").Remotes.InflictTarget:FireServer(unpack(args))
            end
            wait(firingRate)
        end
    end

    -- Start firing automatically
    spawn(startFiring)
    print("üî• Automatic firing started!")

    -- Start monitoring the game status
    spawn(startGameMonitor)

    print("Firing script loaded! Automatic rapid fire enabled.")
    print("Game monitor active - will auto-teleport to lobby when zombie is defeated!")

elseif placeId == 15899178400 then
    print("üéØ Running Party Creation Script...")
    
    -- Simple Party System with Continuous Retry
    local function startPartySystem()
        local function createParty()
            local success, errorMsg = pcall(function()
                local A_1 = "CREATE"
                local A_2 = {
                    ["RoomID"] = 302389339, 
                    ["Boss"] = "Infector", 
                    ["Limit"] = 4, 
                    ["Status"] = false, 
                    ["Password"] = "teah"
                }
                game:GetService("ReplicatedStorage").PartySystem:FireServer(A_1, A_2)
            end)
            
            if success then
                print("‚úÖ Party created successfully!")
                return true
            else
                print("‚ùå Party creation failed:", errorMsg)
                return false
            end
        end

        local function startGame()
            local success, errorMsg = pcall(function()
                local args = {"START"}
                game:GetService("ReplicatedStorage"):WaitForChild("PartySystem"):FireServer(unpack(args))
            end)
            
            if success then
                print("‚úÖ Game started successfully!")
                return true
            else
                print("‚ùå Game start failed:", errorMsg)
                return false
            end
        end

        -- Keep trying until successful
        while true do
            print("üîÑ Attempting to create party and start game...")
            
            if createParty() then
                wait(2)
                if startGame() then
                    print("üéâ Party system completed successfully!")
                    break
                end
            end
            
            print("‚è≥ Retrying in 5 seconds...")
            wait(5)
        end
    end

    startPartySystem()

else
    print("‚ùå No specific script for this game place ID:", placeId)
    print("‚ÑπÔ∏è  Supported Place IDs: 80561320113856 (Sewers Zombie Game) or 15899178400 (Party Lobby)")
end
